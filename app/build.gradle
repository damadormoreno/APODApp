apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    def config = rootProject.extensions.getByName("ext")

    compileSdkVersion config["compile_sdk"]
    buildToolsVersion config["build_tools"]

    defaultConfig {
        applicationId config["application_id"]
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
        versionCode config["version_code"]
        versionName config["version_name"]
        testInstrumentationRunner config["test_runner"]
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    def applicationDependencies = rootProject.ext.mainApplication
    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
    def developmentDependencies = rootProject.ext.development

    //Compile time dependencies
    implementation 'com.android.support:support-v4:27.1.1'
    kapt "android.arch.lifecycle:compiler:1.1.1"
    kapt "com.google.dagger:dagger-compiler:2.15"
    compileOnly "javax.annotation:jsr250-api:1.0"
    compileOnly "javax.inject:javax.inject:1"

    //Application dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.5"
    implementation "org.jetbrains.anko:anko:0.10.4"
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation "com.android.support.constraint:constraint-layout:1.1.2"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "com.android.support:cardview-v7:27.1.1"
    implementation "com.android.support:recyclerview-v7:27.1.1"
    implementation "com.android.support:design:27.1.1"
    implementation "com.android.support:support-annotations:27.1.1"
    implementation "com.github.bumptech.glide:glide:4.6.1"
    implementation "com.google.dagger:dagger:2.15"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.8.1"

    //navBar
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.4'
    implementation 'com.ncapdevi:frag-nav:2.4.0'

    //Unit/Integration tests dependencies
    testImplementation unitTestDependencies.kotlin
    testImplementation unitTestDependencies.kotlinTest
    testImplementation unitTestDependencies.robolectric
    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.mockito
    testImplementation unitTestDependencies.kluent

    //Acceptance tests dependencies
    androidTestImplementation acceptanceTestDependencies.testRunner
    androidTestImplementation acceptanceTestDependencies.testRules
    androidTestImplementation acceptanceTestDependencies.espressoCore
    androidTestImplementation acceptanceTestDependencies.espressoIntents
    androidTestImplementation acceptanceTestDependencies.androidAnnotations

    //Development dependencies
    debugImplementation developmentDependencies.leakCanary
    releaseImplementation developmentDependencies.leakCanaryNoop
    testImplementation developmentDependencies.leakCanaryNoop
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
